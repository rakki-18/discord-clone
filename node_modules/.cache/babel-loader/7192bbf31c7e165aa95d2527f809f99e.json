{"ast":null,"code":"var _jsxFileName = \"/home/rakshit/discord-clone-yt/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport Chatheader from './Chatheader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport firebase from 'firebase';\nimport db from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('channels').doc(channelId).collection('messages').add({\n      message: input,\n      user: user,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(Chatheader, {\n      channelName: channelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          disabled: !channelId,\n          onChange: e => setInput(e.target.value),\n          placeholder: `Message #${channelName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !channelId,\n          className: \"chat__inputButton\",\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__inputIcons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"KJsaULsvNT/igNEzqDO/ORXuJYI=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/rakshit/discord-clone-yt/src/Chat.js"],"names":["React","useEffect","useState","Chatheader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","selectUser","useSelector","selectChannelId","selectChannelName","firebase","db","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","message","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport Chatheader from './Chatheader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport firebase from 'firebase';\nimport db from './firebase';\n\nfunction Chat() {\n    const user = useSelector(selectUser);\n    const channelId = useSelector(selectChannelId);\n    const channelName  = useSelector(selectChannelName);\n\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        if(channelId){\n        db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot =>\n            setMessages(snapshot.docs.map((doc) => doc.data()))    \n        )} \n    }, [channelId]);\n\n    const sendMessage = e => {\n        e.preventDefault();\n\n        db.collection('channels').doc(channelId).collection('messages').add({\n            message: input,\n            user: user,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className=\"chat\">\n            <Chatheader channelName = {channelName}/>\n            \n            <div className=\"chat__messages\">\n               {messages.map((message) => (\n               <Message />\n               ))}\n            </div>\n\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize=\"large\" />\n                <form action=\"\">\n                    <input \n                     value={input}\n                     disabled = {!channelId}\n                     onChange = {(e) => setInput(e.target.value)}\n                    placeholder = {`Message #${channelName}`}></input>\n                    <button \n                     disabled = {!channelId}\n                     className=\"chat__inputButton\"\n                     type=\"submit\"\n                     onClick = {sendMessage}>\n                        Send Message \n                    </button>\n                </form>\n\n                <div className=\"chat__inputIcons\">\n                    <CardGiftcardIcon fontSize=\"large\" />\n                    <GifIcon fontSize = \"large\" />\n                    <EmojiEmotionsIcon fontSize = \"large\" />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}